name: '@tjsr/action-npm-outdated'
description: Check for outdated npm packages
author: Tim Rowe <tim@tjsr.id.au>
inputs:
  token:
    description: 'GitHub token'
    required: false
    default: ${{ github.token }}
  setup-npm:
    description: Generate an .npmrc file to authenticate with the npm registry
    required: false
    default: false
  dependency:
    description: 'Dependency to check'
    required: false
  project:
    description: 'The target project name that must be the owner of the package'
    required: true
  failOnNoNewVersion:
    description: 'Whether the build should fail with an exit code if no new version is available for the specified package'
    required: false
    default: false
  skipNpmCiExecute:
    description: 'Whether to skip the npm ci command execution being called implicitly'
    required: false
    default: true
outputs:
  current:
    description: 'The current version used by the package'
  hasNewVersion:
    description: 'Whether or not there is a new version'
  latest:
    description: 'The latest version available'
  wanted:
    description: 'The version wanted by the package'

runs:
  using: 'composite'
  steps:
  - run: ./outdated.sh
    shell: bash
    id: action-npm-outdated
    name: Run action-npm-outdated
    env: 
      INPUT_DEPENDENCY: ${{ inputs.dependency }}
      INPUT_PROJECT: ${{ inputs.project }}
      INPUT_FAIL_ON_NO_NEW_VERSION: ${{ inputs.failOnNoNewVersion }}
      INPUT_SKIP_NPM_CI_EXECUTE: ${{ inputs.skipNpmCiExecute }}
